{"version":3,"sources":["Redux/Constants.js","Api-connections/Api-connections.js","Redux/Actions.js","LoginPage/LoginPage.js","Table/RoomRow.js","Table/Table.js","Rooms/Rooms.js","Navbar/NavbarElements.js","Images/logo.svg","Navbar/Navbar.js","Rooms/AddEditRoom.js","Main.js","App.js","Redux/Reducers.js","Redux/IndexRedux.js","index.js"],"names":["REQUEST_LOGIN_PENDING","REQUEST_LOGIN_SUCCESS","REQUEST_LOGIN_FAILED","REQUEST_LOGOUT","REQUEST_ROOMS_PENDING","REQUEST_ROOMS_SUCCESS","REQUEST_ROOMS_FAILED","REQUEST_ADDROOM_PENDING","REQUEST_ADDROOM_SUCCESS","REQUEST_ADDROOM_FAILED","REQUEST_DELETEROOM_PENDING","REQUEST_DELETEROOM_SUCCESS","REQUEST_DELETEROOM_FAILED","REQUEST_GETROOM_PENDING","REQUEST_GETROOM_SUCCESS","REQUEST_GETROOM_FAILED","base","api","authentificate","rooms","handleServerError","response","ok","Error","json","LoginPage","props","useForm","register","handleSubmit","errors","formState","dispatch","useDispatch","className","onSubmit","data","store","onRequestLogin","type","placeholder","name","required","value","message","pattern","email","minLength","password","console","log","requestLogin","error","isLoggingin","Spinner","animation","role","varian","RoomRow","useState","Star","setStar","reRender","setReRender","useEffect","facilities","Object","keys","room","map","item","i","push","displayFacilities","history","useHistory","number","beds","price","String","reserved","startDate","substr","expirationDate","onClick","index","id","onRequestDeleteRoom","alert","Table","colSpan","requestRooms","Rooms","onRequestRooms","requestDeleteRoom","isPendingDeleteRoom","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","NavBtnLink","Navbar","to","src","logo","alt","localStorage","removeItem","onRequestLogout","AddEditRoom","useParams","inputRoomNumber","setInputRoomNumber","inputNumberOfBeds","setInputNumberOfBeds","inputPrice","setInputPrice","setReserved","options","selectedOptions","setSelectedOptions","setErrors","getOptionByName","undefined","fetch","method","then","resp","selectedOptionsFromFetch","entries","filter","x","onSelect","onRemove","checkDataBeforeSend","length","addRoom","onChange","event","target","displayValue","selectedValues","onRequestAddRoom","currentFacilities","body","JSON","stringify","indexOf","headers","editRoom","Main","getItem","path","exact","render","connect","state","requestAddRoom","requestGetRoom","payload","catch","roomNumber","onRequestGetRoom","initialStateLogin","loginToken","initialState","isPending","initialAddState","isPendingAdd","roomToAdd","initialDeleteRoomState","successMessage","initialGetRoomState","isPendingGetRoom","allReducers","combineReducers","action","assign","setItem","token","logger","createLogger","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.475146d2.chunk.js","sourcesContent":["export const REQUEST_LOGIN_PENDING = 'REQUEST_LOGIN_PENDING'\r\nexport const REQUEST_LOGIN_SUCCESS = 'REQUEST_LOGIN_SUCCESS'\r\nexport const REQUEST_LOGIN_FAILED = 'REQUEST_LOGIN_FAILED'\r\nexport const REQUEST_LOGOUT = 'REQUEST_LOGOUT'\r\nexport const REQUEST_ROOMS_PENDING = 'REQUEST_ROOMS_PENDING'\r\nexport const REQUEST_ROOMS_SUCCESS = 'REQUEST_ROOMS_SUCCESS'\r\nexport const REQUEST_ROOMS_FAILED = 'REQUEST_ROOMS_FAILED'\r\nexport const REQUEST_ADDROOM_PENDING = 'REQUEST_ADDROOMS_PENDING'\r\nexport const REQUEST_ADDROOM_SUCCESS = 'REQUEST_ADDROOMS_SUCCESS'\r\nexport const REQUEST_ADDROOM_FAILED = 'REQUEST_ADDROOMS_FAILED'\r\nexport const REQUEST_DELETEROOM_PENDING = 'REQUEST_DELETEROOMS_PENDING'\r\nexport const REQUEST_DELETEROOM_SUCCESS = 'REQUEST_DELETEROOMS_SUCCESS'\r\nexport const REQUEST_DELETEROOM_FAILED = 'REQUEST_DELETEROOMS_FAILED'\r\nexport const REQUEST_GETROOM_PENDING = 'REQUEST_GETROOMS_PENDING'\r\nexport const REQUEST_GETROOM_SUCCESS = 'REQUEST_GETROOMS_SUCCESS'\r\nexport const REQUEST_GETROOM_FAILED = 'REQUEST_GETROOMS_FAILED'\r\n\r\n","// const base = \"https://localhost:5001/api\";\r\n\r\n// const api = {\r\n//   base: \"local\",\r\n//   authentificate: base + \"/Users/authenticate\",\r\n//   rooms: base + \"/rooms\"\r\n// };\r\n\r\nconst base = \"https://hotelautomationapi20210407223324.azurewebsites.net/api\"\r\n\r\nconst api = {\r\n  base: \"local\",\r\n  authentificate: base + \"/Users/authenticate\",\r\n  rooms: base + \"/rooms\"\r\n};\r\n\r\nexport default api;","import {\r\n    REQUEST_LOGIN_PENDING,\r\n    REQUEST_LOGIN_SUCCESS,\r\n    REQUEST_LOGIN_FAILED,\r\n    REQUEST_LOGOUT,\r\n    REQUEST_ROOMS_PENDING,\r\n    REQUEST_ROOMS_SUCCESS,\r\n    REQUEST_ROOMS_FAILED,\r\n    REQUEST_ADDROOM_PENDING,\r\n    REQUEST_ADDROOM_SUCCESS,\r\n    REQUEST_ADDROOM_FAILED,\r\n    REQUEST_DELETEROOM_PENDING,\r\n    REQUEST_DELETEROOM_SUCCESS,\r\n    REQUEST_DELETEROOM_FAILED,\r\n    REQUEST_GETROOM_PENDING,\r\n    REQUEST_GETROOM_SUCCESS,\r\n    REQUEST_GETROOM_FAILED,\r\n} from './Constants';\r\nimport api from '../Api-connections/Api-connections';\r\n\r\nexport const requestLogin = data => dispatch => {\r\n    dispatch({ type: REQUEST_LOGIN_PENDING });\r\n    fetch(api.authentificate, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            \"email\": data.email,\r\n            \"password\": data.password\r\n        }),\r\n        headers: { 'Content-Type': 'application/json' }\r\n    })\r\n        .then(handleServerError)\r\n        .then(data => {\r\n            dispatch({ type: REQUEST_LOGIN_SUCCESS, payload: data })\r\n        })\r\n        .catch(error => dispatch({ type: REQUEST_LOGIN_FAILED, payload: error }))\r\n}\r\n\r\nexport const requestLogout = () => dispatch => {\r\n    dispatch({ type: REQUEST_LOGOUT });\r\n}\r\n\r\nconst handleServerError = (response) => {\r\n    if (!response.ok) {\r\n        throw Error(\"Resposnse failed!\");\r\n    }\r\n\r\n    return response.json();\r\n}\r\n\r\nexport const requestRooms = data => dispatch => {\r\n    dispatch({ type: REQUEST_ROOMS_PENDING });\r\n    fetch(api.rooms, {\r\n        method: \"GET\"\r\n    })\r\n        .then(handleServerError)\r\n        .then(data => {\r\n            dispatch({ type: REQUEST_ROOMS_SUCCESS, payload: data })\r\n        })\r\n        .catch(error => dispatch({ type: REQUEST_ROOMS_FAILED, payload: error }))\r\n}\r\n\r\nexport const requestAddRoom = (data, options) => dispatch => {\r\n    dispatch({ type: REQUEST_ADDROOM_PENDING });\r\n    const currentFacilities = [];\r\n    Object.keys(options.map((item, i) => currentFacilities.push(item.name)))\r\n\r\n    fetch(api.rooms, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            \"number\": data.roomNumber,\r\n            \"beds\": data.beds,\r\n            \"facilities\": {\r\n                \"wifi\": currentFacilities.indexOf(\"WIFI\") > -1,\r\n                \"ac\": currentFacilities.indexOf(\"AC\") > -1,\r\n                \"tv\": currentFacilities.indexOf(\"TV\") > -1,\r\n                \"nsr\": currentFacilities.indexOf(\"NSR\") > -1\r\n            },\r\n            \"reserved\": false,\r\n            \"price\": data.price\r\n        }),\r\n        headers: { 'Content-Type': 'application/json' }\r\n    })\r\n        .then(data => {\r\n            dispatch({ type: REQUEST_ADDROOM_SUCCESS, payload: data })\r\n        })\r\n        .catch(error => dispatch({ type: REQUEST_ADDROOM_FAILED, payload: error }))\r\n}\r\n\r\nexport const requestDeleteRoom = (index) => dispatch => {\r\n    dispatch({ type: REQUEST_DELETEROOM_PENDING })\r\n    fetch(api.rooms + `/${index}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(resp => {\r\n            dispatch({ type: REQUEST_DELETEROOM_SUCCESS, payload: resp })\r\n        })\r\n        .catch(error => dispatch({ type: REQUEST_DELETEROOM_FAILED, payload: error }))\r\n}\r\n\r\nexport const requestGetRoom = index => dispatch => {\r\n    dispatch({ type: REQUEST_GETROOM_PENDING })\r\n    fetch(api.rooms + `/${index}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n            dispatch({type: REQUEST_GETROOM_SUCCESS, payload: data})\r\n        })\r\n        .then(error => dispatch({type: REQUEST_GETROOM_FAILED, payload: error}))\r\n}\r\n\r\n","import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch } from 'react-redux'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './loginpage.css'\r\n\r\nconst LoginPage = (props) => {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = data => {\r\n        dispatch(props.store.onRequestLogin(data))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 className=\"form__logintitle\">Login</h1>\r\n                <div className=\"form__inputs\">\r\n                    <input type=\"text\" placeholder=\"Email\" name=\"email\" {...register('email', {\r\n                        required: {\r\n                            value: true,\r\n                            message: \"Email is required!\"\r\n                        },\r\n                        pattern: {\r\n                            value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n                            message: \"Email is invalid!\"\r\n                        }\r\n                    })} />\r\n\r\n                    {errors.email && (<span> {errors.email.message} </span>)}\r\n\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" {...register('password', {\r\n                        required: {\r\n                            value: true,\r\n                            message: \"Password is required!\"\r\n                        },\r\n                        minLength: {\r\n                            value: 6,\r\n                            message: \"Password must be at least 6 characters long!\"\r\n                        }\r\n                    })} />\r\n\r\n                    {errors.password && (<span> {errors.password.message} </span>)}\r\n                </div>\r\n                <div>\r\n                    {console.log(props.store.requestLogin.error)}\r\n                    {props.store.requestLogin.error !== \"\" && (<span className=\"form__loginRequestError\">{props.store.requestLogin.error}</span>)}\r\n                    {props.store.requestLogin.isLoggingin === true && <Spinner animation=\"border\" role=\"status\" varian=\"danger\" className=\"form_loginSpinner\"/>}\r\n                    <input type=\"submit\" className=\"form__loginbutton\" value=\"Login\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport './roomrow.css'\r\nimport { AiOutlineEdit, AiOutlineDelete } from \"react-icons/ai\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst RoomRow = (props) => {\r\n    const [Star, setStar] = useState([])\r\n    const dispatch = useDispatch();\r\n\r\n    const displayFacilities = () => {\r\n        const facilities = []\r\n        Object.keys(props.room.facilities).map((item, i) => props.room.facilities[item] ? facilities.push(item) : '')\r\n        setStar(facilities)\r\n    }\r\n\r\n    const [reRender, setReRender] = useState(0)\r\n\r\n    useEffect(() => {\r\n        displayFacilities();\r\n    }, [reRender])\r\n\r\n    const deleteRoom = (index) => {\r\n        dispatch(props.store.onRequestDeleteRoom(index))\r\n        alert(\"Room deleted!\")\r\n        setReRender(reRender + 1)\r\n    }\r\n\r\n    let history = useHistory();\r\n    const updateRoom = (index) => {\r\n        history.push(`/admin/rooms/edit/${index}`)\r\n    }\r\n\r\n    return (\r\n        <tr className=\"table__roomDataRow\">\r\n            <td>\r\n                {props.room.number}\r\n            </td>\r\n            <td>\r\n                {Star.map((item, i) => item + ' ')}\r\n            </td>\r\n            <td>\r\n                {props.room.beds}\r\n            </td>\r\n            <td>\r\n                {props.room.price}\r\n            </td>\r\n            <td>\r\n                {String(props.room.reserved)}\r\n            </td>\r\n            <td>\r\n                {props.room.startDate?.substr(0, 10)}\r\n            </td>\r\n            <td>\r\n                {props.room.expirationDate?.substr(0, 10)}\r\n            </td>\r\n            <td>\r\n                <AiOutlineEdit onClick={() => updateRoom(props.room.id)} />\r\n            </td>\r\n            <td>\r\n                <AiOutlineDelete onClick={() => deleteRoom(props.room.id)} />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RoomRow\r\n","import RoomRow from '../Table/RoomRow'\r\nimport './table.css'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Table = (props) => {\r\n    let history = useHistory();\r\n    const redirectToAddEditRoom = () => {\r\n        history.push(\"/admin/rooms/add\");\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <table className=\"table__container\">\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={4} className=\"table__header__td_search\">\r\n                            <input type=\"search\" placeholder=\"search\" className=\"table__header__search\" />\r\n                        </td>\r\n\r\n                        <td colSpan={5} className=\"table__header__td_button\">\r\n                            <button className=\"table__header__button\" onClick={() => redirectToAddEditRoom()}> Add room </button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"table__header\">\r\n                        <th>Room number</th>\r\n                        <th>Facilities</th>\r\n                        <th>Beds</th>\r\n                        <th>Price/day</th>\r\n                        <th>Reserved</th>\r\n                        <th>From date</th>\r\n                        <th>To date</th>\r\n                        <th colSpan={2}>Update and delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/* mapeaza roomurile si da ca parametru la roomrow */}\r\n                    {props.store.requestRooms.rooms.map((room, i) =>\r\n                        <RoomRow room={room} key={i} store={props.store} />\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport './rooms.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useEffect } from 'react';\r\nimport Table from '../Table/Table'\r\n\r\nconst Rooms = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(props.store.onRequestRooms())\r\n    }, [props.store.requestDeleteRoom.isPendingDeleteRoom])\r\n\r\n    return (\r\n        <div className=\"rooms_continer\">\r\n            <Table store={props.store} reserved={false}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rooms","import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #000;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5rem calc((85vw - 1000px) / 2);\r\n  z-index: 10;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  &.active {\r\n    color: #15cdfc;\r\n  }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #256ce1;\r\n  padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n \r\n  margin-left: 24px;\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`;","export default __webpack_public_path__ + \"static/media/logo.bc8abf65.svg\";","import React from 'react'\r\nimport './navbar.css'\r\nimport {\r\n    Nav,\r\n    NavLink,\r\n    Bars,\r\n    NavMenu,\r\n    NavBtn,\r\n    NavBtnLink\r\n} from './NavbarElements'\r\nimport logo from '../Images/logo.svg'\r\nimport { Redirect } from 'react-router';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutRedirect = () => {\r\n        localStorage.removeItem('User_Login_Token')\r\n        dispatch(props.store.onRequestLogout())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Nav>\r\n                <NavLink to='/admin/rooms'>\r\n                    <img src={logo} alt='logo' />\r\n                </NavLink>\r\n                <Bars />\r\n                <NavMenu>\r\n                    <NavLink to='/admin/rooms'>\r\n                        Rooms\r\n                    </NavLink>\r\n                    <NavLink to='/admin/reservations'>\r\n                        Reservations\r\n                    </NavLink>\r\n                    {/* <NavLink to='/contact-us' activeStyle>\r\n                        Contact Us\r\n                    </NavLink>\r\n                    <NavLink to='/sign-up' activeStyle>\r\n                        Sign Up\r\n                    </NavLink> */}\r\n                </NavMenu>\r\n                <NavBtn>\r\n                    <NavBtnLink to='/login' onClick={() => logoutRedirect()}>Log out</NavBtnLink>\r\n                </NavBtn>\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useState, useEffect } from 'react'\r\nimport './addeditroom.css'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from 'react-router'\r\nimport api from '../Api-connections/Api-connections';\r\nimport { FaChevronCircleLeft } from 'react-icons/fa';\r\n\r\nconst AddEditRoom = (props) => {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let { id } = useParams();\r\n    const [inputRoomNumber, setInputRoomNumber] = useState();\r\n    const [inputNumberOfBeds, setInputNumberOfBeds] = useState()\r\n    const [inputPrice, setInputPrice] = useState()\r\n    const [reserved, setReserved] = useState()\r\n    const [options, setOptions] = useState([{ name: 'WIFI', id: 1 }, { name: 'AC', id: 2 }, { name: 'TV', id: 3 }, { name: 'NSR', id: 4 }])\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    const [errors, setErrors] = useState([])\r\n\r\n    const getOptionByName = (name) => {\r\n        switch (name) {\r\n            case \"wifi\":\r\n                return 1\r\n            case \"ac\":\r\n                return 2\r\n            case \"tv\":\r\n                return 3\r\n            case \"nsr\":\r\n                return 4\r\n            default:\r\n        }\r\n    }\r\n\r\n    const fetchUpdateRoomData = () => {\r\n        fetch(api.rooms + `/${id}`, {\r\n            method: 'GET'\r\n        })\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                const selectedOptionsFromFetch = Object.entries(data.facilities).filter((x) => x[1] === true).map((x) => {\r\n                    if (x[1] === true) {\r\n                        return { name: x[0], id: getOptionByName(x[0]) }\r\n                    }\r\n                });\r\n\r\n                setInputRoomNumber(data.number)\r\n                setInputNumberOfBeds(data.beds)\r\n                setInputPrice(data.price)\r\n                setSelectedOptions(selectedOptionsFromFetch)\r\n                setReserved(data.reserved)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id !== undefined) {\r\n            fetchUpdateRoomData()\r\n        }\r\n\r\n    }, [])\r\n\r\n    const onSelect = (options) => {\r\n        setSelectedOptions(options)\r\n    }\r\n\r\n    const onRemove = (options) => {\r\n        setSelectedOptions(options)\r\n    }\r\n\r\n    const checkDataBeforeSend = () => {\r\n        let error = []\r\n        if (inputRoomNumber < 0 || inputRoomNumber > 999 || inputRoomNumber === undefined || inputRoomNumber.length === 0) {\r\n            error.push(\"Room number should be between 0 and 999!\")\r\n        }\r\n        if (inputNumberOfBeds < 0 || inputNumberOfBeds > 5 || inputNumberOfBeds === undefined || inputNumberOfBeds.length === 0) {\r\n            error.push(\"Number of beds should be between 0 and 5!\")\r\n        }\r\n        if (inputPrice < 0 || inputPrice === undefined || inputPrice.length === 0) {\r\n            error.push(\"Price should be a positive value!\")\r\n        }\r\n\r\n        setErrors(error)\r\n\r\n        if (error.length > 0) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const addRoom = () => {\r\n        if (checkDataBeforeSend()) {\r\n            dispatch(props.store.onRequestAddRoom({\r\n                \"roomNumber\": inputRoomNumber,\r\n                \"beds\": inputNumberOfBeds,\r\n                \"price\": inputPrice\r\n            }, selectedOptions))\r\n            history.push(\"/admin/rooms\")\r\n        }\r\n    }\r\n\r\n    const editRoom = () => {\r\n        if (checkDataBeforeSend()) {\r\n            console.log(selectedOptions)\r\n            const currentFacilities = [];\r\n            Object.keys(selectedOptions.map((item, i) => currentFacilities.push(item.name)))\r\n            fetch(api.rooms + `/${id}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    \"number\": inputRoomNumber,\r\n                    \"beds\": inputNumberOfBeds,\r\n                    \"facilities\":{\r\n                        \"wifi\": currentFacilities.indexOf(\"WIFI\") > -1,\r\n                        \"ac\": currentFacilities.indexOf(\"AC\") > -1,\r\n                        \"tv\": currentFacilities.indexOf(\"TV\") > -1,\r\n                        \"nsr\": currentFacilities.indexOf(\"NSR\") > -1\r\n                    },\r\n                    \"reserved\": reserved,\r\n                    \"price\": inputPrice\r\n                }),\r\n                headers: { 'Content-Type': 'application/json '}\r\n            })\r\n            .then(resp => resp.json())\r\n            .then(data => console.log(data))\r\n        }\r\n        history.push(\"/admin/rooms\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form__addEditContainer\">\r\n                <h1 className=\"form_addEditTitle\"> {props.addRoom === true ? \"Add room\" : \"Edit room\"} </h1>\r\n                <div className=\"form__addEditInputs\">\r\n                    <p className=\"form__p\"> Room number </p>\r\n                    {id === undefined ? <input type=\"number\" className=\"from__inputs\" name=\"roomNumber\" onChange={event => setInputRoomNumber(event.target.value)} /> :\r\n                        <input type=\"number\" className=\"from__inputs\" name=\"roomNumber\" onChange={event => setInputRoomNumber(event.target.value)} value={inputRoomNumber} />}\r\n\r\n                    <p className=\"form__p\"> Number of beds </p>\r\n                    {id === undefined ? <input type=\"number\" className=\"from__inputs\" name=\"numberOfBeds\" onChange={event => setInputNumberOfBeds(event.target.value)} /> :\r\n                        <input type=\"number\" className=\"from__inputs\" name=\"numberOfBeds\" onChange={event => setInputNumberOfBeds(event.target.value)} value={inputNumberOfBeds} />}\r\n\r\n                    <p className=\"form__p\"> Price </p>\r\n                    {id === undefined ? <input type=\"number\" className=\"from__inputs\" name=\"price\" onChange={event => setInputPrice(event.target.value)} /> :\r\n                        <input type=\"number\" className=\"from__inputs\" name=\"price\" onChange={event => setInputPrice(event.target.value)} value={inputPrice} />}\r\n                    {id === undefined ? <Multiselect\r\n                        options={options}\r\n                        displayValue={\"name\"}\r\n                        onSelect={onSelect}\r\n                        onRemove={onRemove}\r\n                        className=\"form__multiselect\"\r\n                    /> :\r\n                        <Multiselect\r\n                            options={options}\r\n                            displayValue={\"name\"}\r\n                            onSelect={onSelect}\r\n                            onRemove={onRemove}\r\n                            className=\"form__multiselect\"\r\n                            selectedValues={selectedOptions}\r\n                        />}\r\n                    {id === undefined ? <button className=\"form__addEditRoomButton\" type=\"button\" onClick={() => addRoom()} > Add room</button> :\r\n                        <button className=\"form__addEditRoomButton\" type=\"button\" onClick={() => editRoom()} > Edit room</button>}\r\n                    {errors ? <div className=\"form_displayErrorsDiv\"> {errors.map((index, i) => <p key={i} className=\"from__pDisplayErrors\"> {index} </p>)} </div> : ''}\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddEditRoom\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport LoginPage from './LoginPage/LoginPage'\r\nimport Rooms from './Rooms/Rooms'\r\nimport Navbar from './Navbar/Navbar'\r\nimport AddEditRoom from './Rooms/AddEditRoom'\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <Router>\r\n            <div className=\"main\">\r\n                {localStorage.getItem('User_Login_Token') ? <Navbar store={props.store} /> : ''}\r\n                <Route path='/' exact render={() => <Redirect to='/admin/rooms' />} />\r\n                <Route path='/login' render={() => !localStorage.getItem('User_Login_Token') ? <LoginPage store={props.store} /> : <Redirect to='/admin/rooms' />} />\r\n                <Route path='/admin/rooms' exact render={() => localStorage.getItem('User_Login_Token') ? <Rooms store={props.store} /> : <Redirect to='/login' />} />\r\n                <Route path='/admin/rooms/add' exact render={() => localStorage.getItem('User_Login_Token') ? <AddEditRoom store={props.store} addRoom={true} /> : <Redirect to='/login' />} />\r\n                <Route path='/admin/rooms/edit/:id' render={() => localStorage.getItem('User_Login_Token') ? <AddEditRoom store={props.store} addRoom={false} /> : <Redirect to='/login' />} />\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\nimport {\n  requestLogin,\n  requestLogout,\n  requestRooms,\n  requestAddRoom,\n  requestDeleteRoom,\n  requestGetRoom\n} from './Redux/Actions'\nimport { connect } from 'react-redux'\nimport Main from './Main'\n\nconst mapStateToProps = state => {\n  return {\n    requestLogin: state.requestLogin,\n    requestRooms: state.requestRooms,\n    requestAddRoom: state.requestAddRoom,\n    requestDeleteRoom: state.requestDeleteRoom,\n    requestGetRoom: state.requestGetRoom,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRequestLogin: (data) => requestLogin(data),\n    onRequestLogout: () => requestLogout(),\n    onRequestRooms: () => requestRooms(),\n    onRequestAddRoom: (data, options) => requestAddRoom(data, options),\n    onRequestDeleteRoom: (index) => requestDeleteRoom(index),\n    onRequestGetRoom: (index) => requestGetRoom(index),\n  }\n}\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Main store={props} />\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\r\n    REQUEST_LOGIN_PENDING,\r\n    REQUEST_LOGIN_SUCCESS,\r\n    REQUEST_LOGIN_FAILED,\r\n    REQUEST_LOGOUT,\r\n    REQUEST_ROOMS_PENDING,\r\n    REQUEST_ROOMS_SUCCESS,\r\n    REQUEST_ROOMS_FAILED,\r\n    REQUEST_ADDROOM_PENDING,\r\n    REQUEST_ADDROOM_SUCCESS,\r\n    REQUEST_ADDROOM_FAILED,\r\n    REQUEST_DELETEROOM_PENDING,\r\n    REQUEST_DELETEROOM_SUCCESS,\r\n    REQUEST_DELETEROOM_FAILED,\r\n    REQUEST_GETROOM_PENDING,\r\n    REQUEST_GETROOM_SUCCESS,\r\n    REQUEST_GETROOM_FAILED,\r\n} from './Constants'\r\n\r\nconst initialStateLogin = {\r\n    isLoggingin: false,\r\n    loginToken: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestLoginReducer = (state = initialStateLogin, action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_LOGIN_PENDING:\r\n            return Object.assign({}, state, { isLoggingin: true })\r\n        case REQUEST_LOGIN_SUCCESS:\r\n            localStorage.setItem('User_Login_Token', action.payload.token);\r\n            return Object.assign({}, state, { error: '', loginToken: action.payload, isLoggingin: false })\r\n        case REQUEST_LOGIN_FAILED:\r\n            return Object.assign({}, state, { error: \"User or password incorect. Please contact support if you forgot your account!\", isLoggingin: false })\r\n        case REQUEST_LOGOUT:\r\n            return Object.assign({}, state, { loginToken: [], isLoggingin: false })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    isPending: false,\r\n    rooms: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestRoomsReducer = (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_ROOMS_PENDING:\r\n            return Object.assign({}, state, { isPending: true })\r\n        case REQUEST_ROOMS_SUCCESS:\r\n            return Object.assign({}, state, { rooms: action.payload, isPending: false })\r\n        case REQUEST_ROOMS_FAILED:\r\n            return Object.assign({}, { error: action.payload, isPending: false })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialAddState = {\r\n    isPendingAdd: false,\r\n    roomToAdd: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestAddRoomReducer = (state = initialAddState, action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_ADDROOM_PENDING:\r\n            return Object.assign({}, state, { isPending: true })\r\n        case REQUEST_ADDROOM_SUCCESS:\r\n            return Object.assign({}, state, { roomToAdd: action.payload, isPending: false })\r\n        case REQUEST_ADDROOM_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPending: false })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialDeleteRoomState = {\r\n    isPendingDeleteRoom: false,\r\n    successMessage: '',\r\n    error: '',\r\n}\r\n\r\nexport const requestDeleteRoomReducer = (state = initialDeleteRoomState, action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_DELETEROOM_PENDING:\r\n            return Object.assign({}, state, { isPendingDeleteRoom: true })\r\n        case REQUEST_DELETEROOM_SUCCESS:\r\n            return Object.assign({}, state, { successMessage: action.payload, isPendingDeleteRoom: false })\r\n        case REQUEST_DELETEROOM_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPendingDeleteRoom: false })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialGetRoomState = {\r\n    isPendingGetRoom: false,\r\n    room: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestGetRoomReducer = (state = initialGetRoomState, action = {}) => {\r\n    switch (action.type) {\r\n    case REQUEST_GETROOM_PENDING:\r\n        return Object.assign({}, state, {isPendingGetRoom: true})\r\n    case REQUEST_GETROOM_SUCCESS:\r\n        return Object.assign({}, state, {room: action.payload, isPendingGetRoom: false})\r\n    case REQUEST_GETROOM_FAILED:\r\n        return Object.assign({}, state, {error: action.payload, isPendingGetRoom: false})\r\n    default:\r\n        return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport {\r\n  requestLoginReducer,\r\n  requestRoomsReducer,\r\n  requestAddRoomReducer,\r\n  requestDeleteRoomReducer,\r\n  requestGetRoomReducer\r\n} from './Reducers';\r\n\r\nconst allReducers = combineReducers({\r\n  requestLogin: requestLoginReducer,\r\n  requestRooms: requestRoomsReducer,\r\n  requestAddRoom: requestAddRoomReducer,\r\n  requestDeleteRoom: requestDeleteRoomReducer,\r\n  requestGetRoom: requestGetRoomReducer\r\n})\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux'\nimport allReducers from './Redux/IndexRedux';\nimport { Provider } from 'react-redux'\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger'\n\nconst logger = createLogger();\nconst store = createStore(allReducers, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\nexport default store;\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}