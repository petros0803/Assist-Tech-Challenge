{"version":3,"sources":["Redux/Constants.js","Api-connections/Api-connections.js","Redux/Actions.js","LoginPage/LoginPage.js","Table/RoomRow.js","Table/Table.js","Rooms/Rooms.js","Navbar/NavbarElements.js","Images/logo.svg","Navbar/Navbar.js","Rooms/AddEditRoom.js","Rooms/ReservedRoom.js","Main.js","App.js","Redux/Reducers.js","Redux/IndexRedux.js","index.js"],"names":["REQUEST_LOGIN_PENDING","REQUEST_LOGIN_SUCCESS","REQUEST_LOGIN_FAILED","REQUEST_LOGOUT","REQUEST_ROOMS_PENDING","REQUEST_ROOMS_SUCCESS","REQUEST_ROOMS_FAILED","REQUEST_ADDROOM_PENDING","REQUEST_ADDROOM_SUCCESS","REQUEST_ADDROOM_FAILED","REQUEST_DELETEROOM_PENDING","REQUEST_DELETEROOM_SUCCESS","REQUEST_DELETEROOM_FAILED","REQUEST_GETROOM_PENDING","REQUEST_GETROOM_SUCCESS","REQUEST_GETROOM_FAILED","UPDATE_TABLE_TRUE","UPDATE_TABLE_FALSE","base","api","authentificate","rooms","handleServerError","response","ok","Error","json","LoginPage","props","useForm","register","handleSubmit","errors","formState","dispatch","useDispatch","className","onSubmit","data","store","onRequestLogin","type","placeholder","name","required","value","message","pattern","email","minLength","password","console","log","requestLogin","error","isLoggingin","Spinner","animation","role","varian","RoomRow","useState","Star","setStar","reRender","setReRender","useEffect","facilities","Object","keys","room","map","item","i","push","displayFacilities","updateTable","history","useHistory","number","beds","price","String","reserved","startDate","substr","expirationDate","onClick","index","id","onRequestDeleteRoom","alert","Table","onRequestRooms","searchText","setSearchText","filteredRooms","requestRooms","filter","roomsFiltered","includes","colSpan","onChange","e","target","Rooms","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","NavBtnLink","Navbar","to","src","logo","alt","localStorage","removeItem","onRequestLogout","AddEditRoom","useParams","inputRoomNumber","setInputRoomNumber","inputNumberOfBeds","setInputNumberOfBeds","inputPrice","setInputPrice","setReserved","options","selectedOptions","setSelectedOptions","setErrors","getOptionByName","undefined","fetch","method","then","resp","selectedOptionsFromFetch","entries","x","onSelect","onRemove","checkDataBeforeSend","length","addRoom","event","displayValue","selectedValues","onRequestAddRoom","currentFacilities","toUpperCase","body","JSON","stringify","indexOf","headers","editRoom","ReservedRoom","Main","getItem","path","exact","render","connect","state","requestAddRoom","requestDeleteRoom","requestGetRoom","payload","catch","roomNumber","onRequestGetRoom","initialStateLogin","loginToken","initialState","isPending","initialAddState","isPendingAdd","roomToAdd","initialDeleteRoomState","isPendingDeleteRoom","successMessage","initialGetRoomState","isPendingGetRoom","initialUpdateTableState","allReducers","combineReducers","action","assign","setItem","token","logger","createLogger","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.399f557e.chunk.js","sourcesContent":["export const REQUEST_LOGIN_PENDING = 'REQUEST_LOGIN_PENDING'\r\nexport const REQUEST_LOGIN_SUCCESS = 'REQUEST_LOGIN_SUCCESS'\r\nexport const REQUEST_LOGIN_FAILED = 'REQUEST_LOGIN_FAILED'\r\nexport const REQUEST_LOGOUT = 'REQUEST_LOGOUT'\r\nexport const REQUEST_ROOMS_PENDING = 'REQUEST_ROOMS_PENDING'\r\nexport const REQUEST_ROOMS_SUCCESS = 'REQUEST_ROOMS_SUCCESS'\r\nexport const REQUEST_ROOMS_FAILED = 'REQUEST_ROOMS_FAILED'\r\nexport const REQUEST_ADDROOM_PENDING = 'REQUEST_ADDROOMS_PENDING'\r\nexport const REQUEST_ADDROOM_SUCCESS = 'REQUEST_ADDROOMS_SUCCESS'\r\nexport const REQUEST_ADDROOM_FAILED = 'REQUEST_ADDROOMS_FAILED'\r\nexport const REQUEST_DELETEROOM_PENDING = 'REQUEST_DELETEROOMS_PENDING'\r\nexport const REQUEST_DELETEROOM_SUCCESS = 'REQUEST_DELETEROOMS_SUCCESS'\r\nexport const REQUEST_DELETEROOM_FAILED = 'REQUEST_DELETEROOMS_FAILED'\r\nexport const REQUEST_GETROOM_PENDING = 'REQUEST_GETROOMS_PENDING'\r\nexport const REQUEST_GETROOM_SUCCESS = 'REQUEST_GETROOMS_SUCCESS'\r\nexport const REQUEST_GETROOM_FAILED = 'REQUEST_GETROOMS_FAILED'\r\nexport const UPDATE_TABLE_TRUE = 'UPDATE_TABLE_TRUE'\r\nexport const UPDATE_TABLE_FALSE = 'UPDATE_TABLE_FALSE'\r\n\r\n","// const base = \"https://localhost:5001/api\";\r\n\r\n// const api = {\r\n//   base: \"local\",\r\n//   authentificate: base + \"/Users/authenticate\",\r\n//   rooms: base + \"/rooms\"\r\n// };\r\n\r\nconst base = \"https://hotelautomationapi20210407223324.azurewebsites.net/api\"\r\n\r\nconst api = {\r\n  base: \"local\",\r\n  authentificate: base + \"/Users/authenticate\",\r\n  rooms: base + \"/rooms\"\r\n};\r\n\r\nexport default api;","import {\r\n    REQUEST_LOGIN_PENDING,\r\n    REQUEST_LOGIN_SUCCESS,\r\n    REQUEST_LOGIN_FAILED,\r\n    REQUEST_LOGOUT,\r\n    REQUEST_ROOMS_PENDING,\r\n    REQUEST_ROOMS_SUCCESS,\r\n    REQUEST_ROOMS_FAILED,\r\n    REQUEST_ADDROOM_PENDING,\r\n    REQUEST_ADDROOM_SUCCESS,\r\n    REQUEST_ADDROOM_FAILED,\r\n    REQUEST_DELETEROOM_PENDING,\r\n    REQUEST_DELETEROOM_SUCCESS,\r\n    REQUEST_DELETEROOM_FAILED,\r\n    REQUEST_GETROOM_PENDING,\r\n    REQUEST_GETROOM_SUCCESS,\r\n    REQUEST_GETROOM_FAILED,\r\n    UPDATE_TABLE_TRUE,\r\n    UPDATE_TABLE_FALSE\r\n} from './Constants';\r\nimport api from '../Api-connections/Api-connections';\r\n\r\nexport const requestLogin = data => dispatch => {\r\n    dispatch({ type: REQUEST_LOGIN_PENDING });\r\n    fetch(api.authentificate, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            \"email\": data.email,\r\n            \"password\": data.password\r\n        }),\r\n        headers: { 'Content-Type': 'application/json' }\r\n    })\r\n        .then(handleServerError)\r\n        .then(data => {\r\n            dispatch({ type: REQUEST_LOGIN_SUCCESS, payload: data })\r\n        })\r\n        .catch(error => dispatch({ type: REQUEST_LOGIN_FAILED, payload: error }))\r\n}\r\n\r\nexport const requestLogout = () => dispatch => {\r\n    dispatch({ type: REQUEST_LOGOUT });\r\n}\r\n\r\nconst handleServerError = (response) => {\r\n    if (!response.ok) {\r\n        throw Error(\"Resposnse failed!\");\r\n    }\r\n\r\n    return response.json();\r\n}\r\n\r\nexport const requestRooms = data => dispatch => {\r\n    dispatch({ type: REQUEST_ROOMS_PENDING });\r\n    fetch(api.rooms, {\r\n        method: \"GET\"\r\n    })\r\n        .then(handleServerError)\r\n        .then(data => {\r\n            dispatch({ type: REQUEST_ROOMS_SUCCESS, payload: data })\r\n        })\r\n        .catch(error => dispatch({ type: REQUEST_ROOMS_FAILED, payload: error }))\r\n}\r\n\r\nexport const requestAddRoom = (data, options) => dispatch => {\r\n    dispatch({ type: REQUEST_ADDROOM_PENDING });\r\n    const currentFacilities = [];\r\n    Object.keys(options.map((item, i) => currentFacilities.push(item.name)))\r\n\r\n    fetch(api.rooms, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            \"number\": data.roomNumber,\r\n            \"beds\": data.beds,\r\n            \"facilities\": {\r\n                \"wifi\": currentFacilities.indexOf(\"WIFI\") > -1,\r\n                \"ac\": currentFacilities.indexOf(\"AC\") > -1,\r\n                \"tv\": currentFacilities.indexOf(\"TV\") > -1,\r\n                \"nsr\": currentFacilities.indexOf(\"NSR\") > -1\r\n            },\r\n            \"reserved\": false,\r\n            \"price\": data.price\r\n        }),\r\n        headers: { 'Content-Type': 'application/json' }\r\n    })\r\n        .then(data => {\r\n            dispatch({ type: REQUEST_ADDROOM_SUCCESS, payload: data })\r\n            dispatch({ type: UPDATE_TABLE_TRUE })\r\n        })\r\n        .catch(error => dispatch({ type: REQUEST_ADDROOM_FAILED, payload: error }))\r\n    dispatch({ type: UPDATE_TABLE_FALSE })\r\n}\r\n\r\nexport const requestDeleteRoom = (index) => dispatch => {\r\n    dispatch({ type: REQUEST_DELETEROOM_PENDING })\r\n    fetch(api.rooms + `/${index}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(resp => {\r\n            dispatch({ type: REQUEST_DELETEROOM_SUCCESS, payload: resp })\r\n            dispatch({ type: UPDATE_TABLE_TRUE })\r\n        })\r\n        .catch(error => dispatch({ type: REQUEST_DELETEROOM_FAILED, payload: error }))\r\n    dispatch({ type: UPDATE_TABLE_FALSE })\r\n}\r\n\r\nexport const requestGetRoom = index => dispatch => {\r\n    dispatch({ type: REQUEST_GETROOM_PENDING })\r\n    fetch(api.rooms + `/${index}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n            dispatch({ type: REQUEST_GETROOM_SUCCESS, payload: data })\r\n        })\r\n        .then(error => dispatch({ type: REQUEST_GETROOM_FAILED, payload: error }))\r\n}\r\n\r\n","import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch } from 'react-redux'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './loginpage.css'\r\n\r\nconst LoginPage = (props) => {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = data => {\r\n        dispatch(props.store.onRequestLogin(data))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 className=\"form__logintitle\">Login</h1>\r\n                <div className=\"form__inputs\">\r\n                    <input type=\"text\" placeholder=\"Email\" name=\"email\" {...register('email', {\r\n                        required: {\r\n                            value: true,\r\n                            message: \"Email is required!\"\r\n                        },\r\n                        pattern: {\r\n                            value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n                            message: \"Email is invalid!\"\r\n                        }\r\n                    })} />\r\n\r\n                    {errors.email && (<span> {errors.email.message} </span>)}\r\n\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" {...register('password', {\r\n                        required: {\r\n                            value: true,\r\n                            message: \"Password is required!\"\r\n                        },\r\n                        minLength: {\r\n                            value: 6,\r\n                            message: \"Password must be at least 6 characters long!\"\r\n                        }\r\n                    })} />\r\n\r\n                    {errors.password && (<span> {errors.password.message} </span>)}\r\n                </div>\r\n                <div>\r\n                    {console.log(props.store.requestLogin.error)}\r\n                    {props.store.requestLogin.error !== \"\" && (<span className=\"form__loginRequestError\">{props.store.requestLogin.error}</span>)}\r\n                    {props.store.requestLogin.isLoggingin === true && <Spinner animation=\"border\" role=\"status\" varian=\"danger\" className=\"form_loginSpinner\"/>}\r\n                    <input type=\"submit\" className=\"form__loginbutton\" value=\"Login\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport './roomrow.css'\r\nimport { AiOutlineEdit, AiOutlineDelete } from \"react-icons/ai\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst RoomRow = (props) => {\r\n    const [Star, setStar] = useState([])\r\n    const dispatch = useDispatch();\r\n\r\n    const displayFacilities = () => {\r\n        const facilities = []\r\n        Object.keys(props.room.facilities).map((item, i) => props.room.facilities[item] ? facilities.push(item) : '')\r\n        setStar(facilities)\r\n    }\r\n\r\n    const [reRender, setReRender] = useState(0)\r\n\r\n    useEffect(() => {\r\n        displayFacilities();\r\n    }, [props.store.updateTable.updateTable])\r\n\r\n    const deleteRoom = (index) => {\r\n        dispatch(props.store.onRequestDeleteRoom(index))\r\n        alert(\"Room deleted!\")\r\n        setReRender(reRender + 1)\r\n    }\r\n\r\n    let history = useHistory();\r\n    const updateRoom = (index) => {\r\n        history.push(`/admin/rooms/edit/${index}`)\r\n    }\r\n\r\n    return (\r\n        <tr className=\"table__roomDataRow\">\r\n            <td>\r\n                {props.room.number}\r\n            </td>\r\n            <td>\r\n                {Star.map((item, i) => item + ' ')}\r\n            </td>\r\n            <td>\r\n                {props.room.beds}\r\n            </td>\r\n            <td>\r\n                {props.room.price}\r\n            </td>\r\n            <td>\r\n                {String(props.room.reserved)}\r\n            </td>\r\n            <td>\r\n                {props.room.startDate?.substr(0, 10)}\r\n            </td>\r\n            <td>\r\n                {props.room.expirationDate?.substr(0, 10)}\r\n            </td>\r\n            <td>\r\n                <AiOutlineEdit onClick={() => updateRoom(props.room.id)} />\r\n            </td>\r\n            <td>\r\n                <AiOutlineDelete onClick={() => deleteRoom(props.room.id)} />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RoomRow\r\n","import React, { useState, useEffect } from 'react'\r\nimport RoomRow from '../Table/RoomRow'\r\nimport './table.css'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst Table = (props) => {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n    const redirectToAddEditRoom = () => {\r\n        history.push(\"/admin/rooms/add\");\r\n    }\r\n\r\n    const checkReserved = () => {\r\n        return props.reserved\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(props.store.onRequestRooms())\r\n    }, [props.store.updateTable.updateTable])\r\n\r\n    const [searchText, setSearchText] = useState('')\r\n    const rooms = props.store.requestRooms.rooms\r\n\r\n    let filteredRooms = rooms.filter(roomsFiltered => {\r\n        return roomsFiltered.number.includes(searchText)\r\n    })\r\n\r\n    console.log(filteredRooms)\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"table__container\">\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={4} className=\"table__header__td_search\">\r\n                            <input type=\"search\" placeholder=\"search\" className=\"table__header__search\" onChange={e => setSearchText(e.target.value)}/>\r\n                        </td>\r\n\r\n                        <td colSpan={5} className=\"table__header__td_button\">\r\n                            <button className=\"table__header__button\" onClick={() => redirectToAddEditRoom()}> Add room </button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"table__header\">\r\n                        <th>Room number</th>\r\n                        <th>Facilities</th>\r\n                        <th>Beds</th>\r\n                        <th>Price/day</th>\r\n                        <th>Reserved</th>\r\n                        <th>From date</th>\r\n                        <th>To date</th>\r\n                        <th colSpan={2}>Update and delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { props.reserved === false ? \r\n                    // filteredRooms\r\n                    filteredRooms.map((room, i) =>\r\n                        <RoomRow room={room} key={i} store={props.store} />\r\n                    ) : \r\n                    filteredRooms.map((room, i) =>\r\n                        room.reserved === true ? \r\n                        <RoomRow room={room} key={i} store={props.store} /> : console.log(room.reserved))\r\n                    }\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport './rooms.css'\r\nimport Table from '../Table/Table'\r\n\r\nconst Rooms = (props) => {\r\n    return (\r\n        <div className=\"rooms_continer\">\r\n            <Table store={props.store} reserved={false}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rooms","import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #000;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5rem calc((85vw - 1000px) / 2);\r\n  z-index: 10;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  &.active {\r\n    color: #15cdfc;\r\n  }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #256ce1;\r\n  padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n \r\n  margin-left: 24px;\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`;","export default __webpack_public_path__ + \"static/media/logo.bc8abf65.svg\";","import React from 'react'\r\nimport './navbar.css'\r\nimport {\r\n    Nav,\r\n    NavLink,\r\n    Bars,\r\n    NavMenu,\r\n    NavBtn,\r\n    NavBtnLink\r\n} from './NavbarElements'\r\nimport logo from '../Images/logo.svg'\r\nimport { Redirect } from 'react-router';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutRedirect = () => {\r\n        localStorage.removeItem('User_Login_Token')\r\n        dispatch(props.store.onRequestLogout())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Nav>\r\n                <NavLink to='/admin/rooms'>\r\n                    <img src={logo} alt='logo' />\r\n                </NavLink>\r\n                <Bars />\r\n                <NavMenu>\r\n                    <NavLink to='/admin/rooms'>\r\n                        Rooms\r\n                    </NavLink>\r\n                    <NavLink to='/admin/reservations'>\r\n                        Reservations\r\n                    </NavLink>\r\n                    {/* <NavLink to='/contact-us' activeStyle>\r\n                        Contact Us\r\n                    </NavLink>\r\n                    <NavLink to='/sign-up' activeStyle>\r\n                        Sign Up\r\n                    </NavLink> */}\r\n                </NavMenu>\r\n                <NavBtn>\r\n                    <NavBtnLink to='/login' onClick={() => logoutRedirect()}>Log out</NavBtnLink>\r\n                </NavBtn>\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useState, useEffect } from 'react'\r\nimport './addeditroom.css'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from 'react-router'\r\nimport api from '../Api-connections/Api-connections';\r\nimport { FaChevronCircleLeft } from 'react-icons/fa';\r\n\r\nconst AddEditRoom = (props) => {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let { id } = useParams();\r\n    const [inputRoomNumber, setInputRoomNumber] = useState();\r\n    const [inputNumberOfBeds, setInputNumberOfBeds] = useState()\r\n    const [inputPrice, setInputPrice] = useState()\r\n    const [reserved, setReserved] = useState()\r\n    const [options, setOptions] = useState([{ name: 'WIFI', id: 1 }, { name: 'AC', id: 2 }, { name: 'TV', id: 3 }, { name: 'NSR', id: 4 }])\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    const [errors, setErrors] = useState([])\r\n\r\n    const getOptionByName = (name) => {\r\n        switch (name) {\r\n            case \"wifi\":\r\n                return 1\r\n            case \"ac\":\r\n                return 2\r\n            case \"tv\":\r\n                return 3\r\n            case \"nsr\":\r\n                return 4\r\n            default:\r\n        }\r\n    }\r\n\r\n    const fetchUpdateRoomData = () => {\r\n        fetch(api.rooms + `/${id}`, {\r\n            method: 'GET'\r\n        })\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                const selectedOptionsFromFetch = Object.entries(data.facilities).filter((x) => x[1] === true).map((x) => {\r\n                    if (x[1] === true) {\r\n                        return { name: x[0], id: getOptionByName(x[0]) }\r\n                    }\r\n                });\r\n\r\n                setInputRoomNumber(data.number)\r\n                setInputNumberOfBeds(data.beds)\r\n                setInputPrice(data.price)\r\n                setSelectedOptions(selectedOptionsFromFetch)\r\n                setReserved(data.reserved)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id !== undefined) {\r\n            fetchUpdateRoomData()\r\n        }\r\n\r\n    }, [])\r\n\r\n    const onSelect = (options) => {\r\n        setSelectedOptions(options)\r\n    }\r\n\r\n    const onRemove = (options) => {\r\n        setSelectedOptions(options)\r\n    }\r\n\r\n    const checkDataBeforeSend = () => {\r\n        let error = []\r\n        if (inputRoomNumber < 0 || inputRoomNumber > 999 || inputRoomNumber === undefined || inputRoomNumber.length === 0) {\r\n            error.push(\"Room number should be between 0 and 999!\")\r\n        }\r\n        if (inputNumberOfBeds < 0 || inputNumberOfBeds > 5 || inputNumberOfBeds === undefined || inputNumberOfBeds.length === 0) {\r\n            error.push(\"Number of beds should be between 0 and 5!\")\r\n        }\r\n        if (inputPrice < 0 || inputPrice === undefined || inputPrice.length === 0) {\r\n            error.push(\"Price should be a positive value!\")\r\n        }\r\n\r\n        setErrors(error)\r\n\r\n        if (error.length > 0) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const addRoom = () => {\r\n        if (checkDataBeforeSend()) {\r\n            dispatch(props.store.onRequestAddRoom({\r\n                \"roomNumber\": inputRoomNumber,\r\n                \"beds\": inputNumberOfBeds,\r\n                \"price\": inputPrice\r\n            }, selectedOptions))\r\n            history.push(\"/admin/rooms\")\r\n        }\r\n    }\r\n\r\n    const editRoom = () => {\r\n        if (checkDataBeforeSend()) {\r\n            const currentFacilities = [];\r\n            Object.keys(selectedOptions.map((item, i) => currentFacilities.push(item.name.toUpperCase())))\r\n            fetch(api.rooms + `/${id}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    \"number\": inputRoomNumber,\r\n                    \"beds\": inputNumberOfBeds,\r\n                    \"facilities\":{\r\n                        \"wifi\": currentFacilities.indexOf(\"WIFI\") > -1 ,\r\n                        \"ac\": currentFacilities.indexOf(\"AC\") > -1,\r\n                        \"tv\": currentFacilities.indexOf(\"TV\") > -1,\r\n                        \"nsr\": currentFacilities.indexOf(\"NSR\") > -1\r\n                    },\r\n                    \"reserved\": reserved,\r\n                    \"price\": inputPrice\r\n                }),\r\n                headers: { 'Content-Type': 'application/json '}\r\n            })\r\n            .then(resp => resp.json())\r\n            .then(dispatch({type: 'UPDATE_TABLE_TRUE'}))\r\n        }\r\n        dispatch({type: 'UPDATE_TABLE_FALSE'})\r\n        history.push(\"/admin/rooms\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form__addEditContainer\">\r\n                <h1 className=\"form_addEditTitle\"> {props.addRoom === true ? \"Add room\" : \"Edit room\"} </h1>\r\n                <div className=\"form__addEditInputs\">\r\n                    <p className=\"form__p\"> Room number </p>\r\n                    {id === undefined ? <input type=\"number\" className=\"from__inputs\" name=\"roomNumber\" onChange={event => setInputRoomNumber(event.target.value)} /> :\r\n                        <input type=\"number\" className=\"from__inputs\" name=\"roomNumber\" onChange={event => setInputRoomNumber(event.target.value)} value={inputRoomNumber} />}\r\n\r\n                    <p className=\"form__p\"> Number of beds </p>\r\n                    {id === undefined ? <input type=\"number\" className=\"from__inputs\" name=\"numberOfBeds\" onChange={event => setInputNumberOfBeds(event.target.value)} /> :\r\n                        <input type=\"number\" className=\"from__inputs\" name=\"numberOfBeds\" onChange={event => setInputNumberOfBeds(event.target.value)} value={inputNumberOfBeds} />}\r\n\r\n                    <p className=\"form__p\"> Price </p>\r\n                    {id === undefined ? <input type=\"number\" className=\"from__inputs\" name=\"price\" onChange={event => setInputPrice(event.target.value)} /> :\r\n                        <input type=\"number\" className=\"from__inputs\" name=\"price\" onChange={event => setInputPrice(event.target.value)} value={inputPrice} />}\r\n                    {id === undefined ? <Multiselect\r\n                        options={options}\r\n                        displayValue={\"name\"}\r\n                        onSelect={onSelect}\r\n                        onRemove={onRemove}\r\n                        className=\"form__multiselect\"\r\n                    /> :\r\n                        <Multiselect\r\n                            options={options}\r\n                            displayValue={\"name\"}\r\n                            onSelect={onSelect}\r\n                            onRemove={onRemove}\r\n                            className=\"form__multiselect\"\r\n                            selectedValues={selectedOptions}\r\n                        />}\r\n                    {id === undefined ? <button className=\"form__addEditRoomButton\" type=\"button\" onClick={() => addRoom()} > Add room</button> :\r\n                        <button className=\"form__addEditRoomButton\" type=\"button\" onClick={() => editRoom()} > Edit room</button>}\r\n                    {errors ? <div className=\"form_displayErrorsDiv\"> {errors.map((index, i) => <p key={i} className=\"from__pDisplayErrors\"> {index} </p>)} </div> : ''}\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddEditRoom\r\n","import React from 'react'\r\nimport Table from '../Table/Table';\r\n\r\nconst ReservedRoom = (props) => {\r\n    return (\r\n        <div>\r\n            <Table store={props.store} reserved={true}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReservedRoom\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport LoginPage from './LoginPage/LoginPage'\r\nimport Rooms from './Rooms/Rooms'\r\nimport Navbar from './Navbar/Navbar'\r\nimport AddEditRoom from './Rooms/AddEditRoom'\r\nimport ReservedRoom from './Rooms/ReservedRoom';\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <Router>\r\n            <div className=\"main\">\r\n                {localStorage.getItem('User_Login_Token') ? <Navbar store={props.store} /> : ''}\r\n                <Route path='/' exact render={() => <Redirect to='/admin/rooms' />} />\r\n                <Route path='/login' render={() => !localStorage.getItem('User_Login_Token') ? <LoginPage store={props.store} /> : <Redirect to='/admin/rooms' />} />\r\n                <Route path='/admin/rooms' exact render={() => localStorage.getItem('User_Login_Token') ? <Rooms store={props.store} /> : <Redirect to='/login' />} />\r\n                <Route path='/admin/rooms/add' exact render={() => localStorage.getItem('User_Login_Token') ? <AddEditRoom store={props.store} addRoom={true} /> : <Redirect to='/login' />} />\r\n                <Route path='/admin/rooms/edit/:id' render={() => localStorage.getItem('User_Login_Token') ? <AddEditRoom store={props.store} addRoom={false} /> : <Redirect to='/login' />} />\r\n                <Route path='/admin/reservations' render={() => localStorage.getItem('User_Login_Token') ? <ReservedRoom store={props.store} /> : <Redirect to='/login' />} />\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\nimport {\n  requestLogin,\n  requestLogout,\n  requestRooms,\n  requestAddRoom,\n  requestDeleteRoom,\n  requestGetRoom,\n} from './Redux/Actions'\nimport { connect } from 'react-redux'\nimport Main from './Main'\n\nconst mapStateToProps = state => {\n  return {\n    requestLogin: state.requestLogin,\n    requestRooms: state.requestRooms,\n    requestAddRoom: state.requestAddRoom,\n    requestDeleteRoom: state.requestDeleteRoom,\n    requestGetRoom: state.requestGetRoom,\n    updateTable: state.updateTable\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRequestLogin: (data) => requestLogin(data),\n    onRequestLogout: () => requestLogout(),\n    onRequestRooms: () => requestRooms(),\n    onRequestAddRoom: (data, options) => requestAddRoom(data, options),\n    onRequestDeleteRoom: (index) => requestDeleteRoom(index),\n    onRequestGetRoom: (index) => requestGetRoom(index),\n  }\n}\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Main store={props} />\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\r\n    REQUEST_LOGIN_PENDING,\r\n    REQUEST_LOGIN_SUCCESS,\r\n    REQUEST_LOGIN_FAILED,\r\n    REQUEST_LOGOUT,\r\n    REQUEST_ROOMS_PENDING,\r\n    REQUEST_ROOMS_SUCCESS,\r\n    REQUEST_ROOMS_FAILED,\r\n    REQUEST_ADDROOM_PENDING,\r\n    REQUEST_ADDROOM_SUCCESS,\r\n    REQUEST_ADDROOM_FAILED,\r\n    REQUEST_DELETEROOM_PENDING,\r\n    REQUEST_DELETEROOM_SUCCESS,\r\n    REQUEST_DELETEROOM_FAILED,\r\n    REQUEST_GETROOM_PENDING,\r\n    REQUEST_GETROOM_SUCCESS,\r\n    REQUEST_GETROOM_FAILED,\r\n    UPDATE_TABLE_TRUE,\r\n    UPDATE_TABLE_FALSE,\r\n} from './Constants'\r\n\r\nconst initialStateLogin = {\r\n    isLoggingin: false,\r\n    loginToken: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestLoginReducer = (state = initialStateLogin, action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_LOGIN_PENDING:\r\n            return Object.assign({}, state, { isLoggingin: true })\r\n        case REQUEST_LOGIN_SUCCESS:\r\n            localStorage.setItem('User_Login_Token', action.payload.token);\r\n            return Object.assign({}, state, { error: '', loginToken: action.payload, isLoggingin: false })\r\n        case REQUEST_LOGIN_FAILED:\r\n            return Object.assign({}, state, { error: \"User or password incorect. Please contact support if you forgot your account!\", isLoggingin: false })\r\n        case REQUEST_LOGOUT:\r\n            return Object.assign({}, state, { loginToken: [], isLoggingin: false })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    isPending: false,\r\n    rooms: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestRoomsReducer = (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_ROOMS_PENDING:\r\n            return Object.assign({}, state, { isPending: true })\r\n        case REQUEST_ROOMS_SUCCESS:\r\n            return Object.assign({}, state, { rooms: action.payload, isPending: false })\r\n        case REQUEST_ROOMS_FAILED:\r\n            return Object.assign({}, { error: action.payload, isPending: false })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialAddState = {\r\n    isPendingAdd: false,\r\n    roomToAdd: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestAddRoomReducer = (state = initialAddState, action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_ADDROOM_PENDING:\r\n            return Object.assign({}, state, { isPending: true })\r\n        case REQUEST_ADDROOM_SUCCESS:\r\n            return Object.assign({}, state, { roomToAdd: action.payload, isPending: false })\r\n        case REQUEST_ADDROOM_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPending: false })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialDeleteRoomState = {\r\n    isPendingDeleteRoom: false,\r\n    successMessage: '',\r\n    error: '',\r\n}\r\n\r\nexport const requestDeleteRoomReducer = (state = initialDeleteRoomState, action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_DELETEROOM_PENDING:\r\n            return Object.assign({}, state, { isPendingDeleteRoom: true })\r\n        case REQUEST_DELETEROOM_SUCCESS:\r\n            return Object.assign({}, state, { successMessage: action.payload, isPendingDeleteRoom: false })\r\n        case REQUEST_DELETEROOM_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPendingDeleteRoom: false })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialGetRoomState = {\r\n    isPendingGetRoom: false,\r\n    room: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestGetRoomReducer = (state = initialGetRoomState, action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_GETROOM_PENDING:\r\n            return Object.assign({}, state, { isPendingGetRoom: true })\r\n        case REQUEST_GETROOM_SUCCESS:\r\n            return Object.assign({}, state, { room: action.payload, isPendingGetRoom: false })\r\n        case REQUEST_GETROOM_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPendingGetRoom: false })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialUpdateTableState = {\r\n    updateTable: false\r\n}\r\n\r\nexport const updateTableReducer = (state = initialUpdateTableState, action = {}) => {\r\n    switch (action.type) {\r\n        case UPDATE_TABLE_TRUE:\r\n            return Object.assign({}, state, { updateTable: true })\r\n        case UPDATE_TABLE_FALSE:\r\n            return Object.assign({}, state, { updateTable: false })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  requestLoginReducer,\r\n  requestRoomsReducer,\r\n  requestAddRoomReducer,\r\n  requestDeleteRoomReducer,\r\n  requestGetRoomReducer,\r\n  updateTableReducer,\r\n} from './Reducers';\r\n\r\nconst allReducers = combineReducers({\r\n  requestLogin: requestLoginReducer,\r\n  requestRooms: requestRoomsReducer,\r\n  requestAddRoom: requestAddRoomReducer,\r\n  requestDeleteRoom: requestDeleteRoomReducer,\r\n  requestGetRoom: requestGetRoomReducer,\r\n  updateTable: updateTableReducer,\r\n})\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux'\nimport allReducers from './Redux/IndexRedux';\nimport { Provider } from 'react-redux'\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger'\n\nconst logger = createLogger();\nconst store = createStore(allReducers, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\nexport default store;\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}